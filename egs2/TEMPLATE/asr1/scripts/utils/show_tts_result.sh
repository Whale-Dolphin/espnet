#!/usr/bin/env bash
mindepth=0
maxdepth=10

. utils/parse_options.sh

if [ $# -gt 1 ]; then
    echo "Usage: $0 --mindepth 0 --maxdepth 1 [expdir]" 1>&2
    echo ""
    echo "Show the system environments and the evaluation results in Markdown format."
    exit 1
fi

[ -f ./path.sh ] && . ./path.sh
set -euo pipefail
if [ $# -eq 1 ]; then
    expdir=$1
else
    expdir=exp
fi

cat << EOF
<!-- Generated by $0 -->
# RESULTS
## Environments
- date: \`$(LC_ALL=C date)\`
EOF

echo

python3 << EOF
import sys, espnet, torch
pyversion = sys.version.replace('\n', ' ')

print(f"""- python version: \`{pyversion}\`
- espnet version: \`espnet {espnet.__version__}\`
- pytorch version: \`pytorch {torch.__version__}\`""")
EOF

cat << EOF
- Git hash: \`$(git rev-parse HEAD)\`
  - Commit date: \`$(git log -1 --format='%cd')\`
EOF

find "$expdir" -type d -name 'score_*' | while read -r d; do
    result_file="$d/result.txt"
    if [ -f "$result_file" ]; then
        bname=$(basename "$d")
        name="${bname#score_}"
        name="${name%.*}"
        echo "## $name"
        grep -E 'Mean|Medium|S\.D\.' "$result_file" || true
        echo
    fi
done

find "$expdir" -type f -name "avg_result.txt" | while IFS= read -r filepath; do
    while IFS= read -r line; do
        heading="$(echo "$line" | cut -d ":" -f 1)"
        echo "## $heading"
        echo "$line"
        echo
    done < "$filepath"
done